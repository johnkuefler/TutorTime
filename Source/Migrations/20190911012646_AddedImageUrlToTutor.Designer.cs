// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TutorTime.Models;

namespace TutorTime.Migrations
{
    [DbContext(typeof(TutorDbContext))]
    [Migration("20190911012646_AddedImageUrlToTutor")]
    partial class AddedImageUrlToTutor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TutorTime.Models.Tutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName");

                    b.Property<string>("Location");

                    b.Property<string>("Subject");

                    b.Property<string>("Time");

                    b.HasKey("Id");

                    b.ToTable("Tutors");
                });

            modelBuilder.Entity("TutorTime.Models.TutoringRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("DateTime");

                    b.Property<string>("Name");

                    b.Property<int>("NumberOfPeople");

                    b.Property<string>("Problem");

                    b.Property<int>("TutorId");

                    b.HasKey("Id");

                    b.HasIndex("TutorId");

                    b.ToTable("TutoringRequests");
                });

            modelBuilder.Entity("TutorTime.Models.TutoringRequest", b =>
                {
                    b.HasOne("TutorTime.Models.Tutor")
                        .WithMany("TutoringRequests")
                        .HasForeignKey("TutorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
